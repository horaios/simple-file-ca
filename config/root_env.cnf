# OpenSSL root CA configuration file.

[ ca ]
# `man ca`
default_ca                      = CA_default

[ CA_default ]
# Directory and file locations.
dir                             = ${ENV::OPENSSL_AUTHORITY_BASE}
certs                           = $dir/certs
crl_dir                         = $dir/crl
new_certs_dir                   = $dir/newcerts
database                        = $dir/index.txt
serial                          = $dir/serial
RANDFILE                        = $dir/private/.rand

# The root key and root certificate.
private_key                     = $dir/private/ra.key.pem
certificate                     = $dir/certs/ra.cert.pem

# For certificate revocation lists.
crlnumber                       = $dir/crlnumber
crl                             = $dir/crl/ra.crl.pem
crl_extensions                  = crl_ext
default_crl_days                = 30

# SHA-1 is deprecated, so use SHA-2 instead.
default_md                      = sha256

name_opt                        = ca_default, -esc_msb, utf8
cert_opt                        = ca_default
default_days                    = 375
preserve                        = no
policy                          = policy_strict
email_in_dn                     = no
copy_extensions                 = copy
unique_subject                  = no

[ policy_strict ]
# The root CA should only sign intermediate certificates that match.
# See the POLICY FORMAT section of `man ca`.
countryName                     = match
stateOrProvinceName             = match
organizationName                = match
organizationalUnitName          = optional
commonName                      = supplied
emailAddress                    = optional

[ policy_loose ]
# Allow the intermediate CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the `ca` man page.
countryName                     = optional
stateOrProvinceName             = optional
localityName                    = optional
organizationName                = optional
organizationalUnitName          = optional
commonName                      = supplied
emailAddress                    = optional

[ req ]
# Options for the `req` tool (`man req`).
prompt                          = no
default_bits                    = 2048
distinguished_name              = req_distinguished_name
utf8                            = yes
string_mask                     = utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md                      = sha256

# Extension to add when the -x509 option is used.
x509_extensions                 = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = ${ENV::OPENSSL_AUTHORITY_COUNTRY}
stateOrProvinceName             = ${ENV::OPENSSL_AUTHORITY_STATE}
localityName                    = ${ENV::OPENSSL_AUTHORITY_CITY}
0.organizationName              = ${ENV::OPENSSL_AUTHORITY_ORG}
organizationalUnitName          = ${ENV::OPENSSL_AUTHORITY_UNIT}
commonName                      = ${ENV::OPENSSL_AUTHORITY_CNAME}
emailAddress                    = ${ENV::OPENSSL_AUTHORITY_EMAIL}

# Optionally, specify some defaults.
#countryName_default            = DE
#stateOrProvinceName_default    = Baden-WÃ¼rttemberg
#localityName_default           =
#0.organizationName_default     = Example GmbH
#organizationalUnitName_default =
#emailAddress_default           =
#commonName_default             = Example GmbH Intermediate CA

[ v3_ca ]
# Extensions for a typical CA (`man x509v3_config`).
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid:always,issuer
basicConstraints                = critical, CA:true
keyUsage                        = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (`man x509v3_config`).
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid:always,issuer
basicConstraints                = critical, CA:true, pathlen:0
keyUsage                        = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints                = CA:FALSE
nsCertType                      = client, email
nsComment                       = "OpenSSL Generated User Certificate"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage                = clientAuth, emailProtection

[ client_cert ]
# Extensions for client certificates (`man x509v3_config`).
basicConstraints                = CA:FALSE
nsCertType                      = client
nsComment                       = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical, digitalSignature, keyEncipherment
extendedKeyUsage                = clientAuth

[ server_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints                = CA:FALSE
nsCertType                      = server
nsComment                       = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer:always
keyUsage                        = critical, digitalSignature, keyEncipherment
extendedKeyUsage                = serverAuth

[ server_client_cert ]
# Extensions for server certificates (`man x509v3_config`).
basicConstraints                = CA:FALSE
nsCertType                      = client, server
nsComment                       = "OpenSSL Generated Server/Client Certificate"
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer:always
keyUsage                        = critical, digitalSignature, keyEncipherment
extendedKeyUsage                = clientAuth, serverAuth

[ crl_ext ]
# Extension for CRLs (`man x509v3_config`).
authorityKeyIdentifier          = keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (`man ocsp`).
basicConstraints                = CA:FALSE
subjectKeyIdentifier            = hash
authorityKeyIdentifier          = keyid,issuer
keyUsage                        = critical, digitalSignature
extendedKeyUsage                = critical, OCSPSigning
